#lang racket

(define (p) (p))
(define (test x y)
  (if (= x 0) 0 y)
)

(test 0 (p))
; schemeでは適用順評価
; つまり手続きを作用するときにすべてを評価するため (p) を評価する。
; (p)は己自身を返し続けるため無限ループ
; なのでこれも作用時に(p)を評価し続けてしまうので無限ループ

; 一方、正規順評価は必要になるまで引数を評価しない。
; そのため (= x 0) が #t を返し
; 0を返すため y つまり (p) は評価されない。よって無限ループが起こる前に 0を返す。
